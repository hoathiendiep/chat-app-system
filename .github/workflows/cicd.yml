name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./chat-app-frontend
        run: npm install

      - name: Build frontend
        working-directory: ./chat-app-frontend
        run: npm run build

      - name: Set up JDK for backend
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Maven
        run: sudo apt-get install maven -y

      - name: Build backend
        working-directory: ./chat-app-backend
        run: mvn clean install -DskipTests

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./chat-app-frontend/dist/chat-app-frontend/browser

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: ./chat-app-backend/target/*.jar

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        working-directory: ./chat-app-backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest

      - name: Build and push frontend Docker image
        working-directory: ./chat-app-frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-app-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-app-frontend:latest

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to EC2
        env:
          EC2_PUBLIC_URL: http://${{ secrets.EC2_PUBLIC_IP }}
          FRONT_END_BASE_URL: http://${{ secrets.EC2_PUBLIC_IP }}:4200
          API_URL: http://${{ secrets.EC2_PUBLIC_IP }}:8081/chat-app-api/rs/v1
          KEYCLOAK_URI: http://${{ secrets.EC2_PUBLIC_IP }}:8080
          KC_BOOTSTRAP_ADMIN_PASSWORD: ${{ secrets.KC_BOOTSTRAP_ADMIN_PASSWORD }}
          KC_DB_PASSWORD: ${{ secrets.KC_DB_PASSWORD }}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Purpose,Values=ChatApp" \
            --parameters "commands=[
              \"echo KC_BOOTSTRAP_ADMIN_USERNAME=admin > /home/ec2-user/.env\",
              \"echo KC_BOOTSTRAP_ADMIN_PASSWORD=$KC_BOOTSTRAP_ADMIN_PASSWORD >> /home/ec2-user/.env\",
              \"echo KC_DB=postgres >> /home/ec2-user/.env\",
              \"echo KC_DB_USERNAME=admin >> /home/ec2-user/.env\",
              \"echo KC_DB_PASSWORD=$KC_DB_PASSWORD >> /home/ec2-user/.env\",
              \"echo POSTGRES_DB=chat-app-system >> /home/ec2-user/.env\",
              \"echo ENV_TYPE=prod >> /home/ec2-user/.env\",
              \"echo DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/chat-app-system >> /home/ec2-user/.env\",
              \"echo DATASOURCE_USERNAME=admin >> /home/ec2-user/.env\",
              \"echo DATASOURCE_PASSWORD=$DATASOURCE_PASSWORD >> /home/ec2-user/.env\",
              \"echo AZURE_STORAGE_CONNECTION_STRING=\\\"AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;AccountName=devstoreaccount1;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;\\\" >> /home/ec2-user/.env\",
              \"echo KEYCLOAK_ISSUER_URI=$KEYCLOAK_URI/realms/chatapp-realm >> /home/ec2-user/.env\",
              \"echo KEYCLOAK_JWKS_URI=$KEYCLOAK_URI/realms/chatapp-realm/protocol/openid-connect/certs >> /home/ec2-user/.env\",
              \"echo FRONT_END_BASE_URL=$FRONT_END_BASE_URL >> /home/ec2-user/.env\",
              \"echo API_URL=$API_URL >> /home/ec2-user/.env\",
              \"echo KEYCLOAK_URI=$KEYCLOAK_URI >> /home/ec2-user/.env\",
              \"echo ENVIRONMENT=Production >> /home/ec2-user/.env\",
              \"docker-compose -f /home/ec2-user/docker-compose.yml down\",
              \"docker-compose -f /home/ec2-user/docker-compose.yml pull\",
              \"docker-compose -f /home/ec2-user/docker-compose.yml up -d\"
            ]" \
            --comment "Deploy chat app"
